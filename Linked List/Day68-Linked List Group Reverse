/*
class Node
{
    int data;
    Node next;
    Node(int key)
    {
        data = key;
        next = null;
    }
}
*/

class Solution {
    public Node reverseKGroup(Node head, int k) {
        // code here
        if( head == null || k <= 1) return head;
        
        Node curr = head;
        Node newHead = null;
        Node tail = null;
        
        while(curr != null){
            Node groupPrev = null;
            Node groupCurr = curr;
            int count = 0;
            
            while(curr != null && count < k){
                Node next = curr.next;
                curr.next = groupPrev;
                groupPrev = curr;
                curr = next;
                count++;
            }
            
            if(newHead == null) newHead = groupPrev;
            if(tail != null) tail.next = groupPrev;
            tail = groupCurr;
        }
        return newHead;
    }
}
