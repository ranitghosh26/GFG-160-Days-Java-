class Solution {
    public ArrayList<Integer> sumClosest(int[] arr, int target) {
        // code here
        ArrayList<Integer> res = new ArrayList<>();
        int n = arr.length;
        if(n < 2) return res;
        Arrays.sort(arr);
        int left = 0;
        int right = n - 1;
        int close = Integer.MAX_VALUE;
        
        int maxDiff = -1;
        
        while(left<right) {
            int sum = arr[left] + arr[right];
            int diff = Math.abs(sum - target);
            
            if(diff < close || diff == close && (arr[right]-arr[left]) > maxDiff) {
               
                res = new ArrayList<>(Arrays.asList(arr[left], arr[right]));
                close = diff;
                maxDiff = arr[right] - arr[left];
            }
            if(sum < target) left++;
            else right--;
        }
        return res;
    }
}
